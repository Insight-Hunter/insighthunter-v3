# wrangler-cloudflare.toml

# Cloudflare Workers Configuration for Insight Hunter v3

name = “insighthunter-v3”
main = “src/index.js”
compatibility_date = “2024-01-15”

# ============================================

# AUTH WORKER

# ============================================

[env.auth]
name = “insighthunter-auth”
main = “workers/auth/index-cloudflare.js”
route = “*/auth/*”

[[env.auth.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.auth.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

# ============================================

# INGEST WORKER

# ============================================

[env.ingest]
name = “insighthunter-ingest”
main = “workers/ingest/index-ai.js”
route = “*/ingest/*”

[[env.ingest.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.ingest.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

[[env.ingest.r2_buckets]]
binding = “BUCKET”
bucket_name = “insighthunter-files”

[[env.ingest.vectorize]]
binding = “VECTORIZE”
index_name = “transaction-search”

[env.ingest.ai]
binding = “AI”

# ============================================

# ANALYTICS WORKER

# ============================================

[env.analytics]
name = “insighthunter-analytics”
main = “workers/analytics/index-ai.js”
route = “*/analytics/*”

[[env.analytics.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.analytics.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

[[env.analytics.vectorize]]
binding = “VECTORIZE”
index_name = “transaction-search”

[env.analytics.ai]
binding = “AI”

# ============================================

# MANAGEMENT WORKER

# ============================================

[env.management]
name = “insighthunter-management”
main = “workers/management/index-cloudflare.js”
route = “*/management/*”

[[env.management.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.management.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

# ============================================

# SHARED CONFIGURATION

# ============================================

# Environment Variables (use wrangler secret for sensitive data)

[vars]
NODE_ENV = “production”
API_VERSION = “v1”

# Rate Limiting

[limits]
cpu_ms = 50

# Analytics Engine (for usage tracking)

[[analytics_engine_datasets]]
binding = “ANALYTICS”

# Durable Objects (for future real-time features)

# [[durable_objects.bindings]]

# name = “REALTIME”

# class_name = “RealtimeSession”

# ============================================

# DEVELOPMENT OVERRIDES

# ============================================

[env.dev]
vars = { NODE_ENV = “development” }

# ============================================

# VECTORIZE INDEX CONFIGURATION

# ============================================

# Create with: wrangler vectorize create transaction-search –dimensions=768 –metric=cosine

# ============================================

# D1 DATABASE COMMANDS

# ============================================

# Create database:

# wrangler d1 create insighthunter

# Apply schema:

# wrangler d1 execute insighthunter –file=database/d1-schema.sql

# Query database:

# wrangler d1 execute insighthunter –command=“SELECT * FROM users LIMIT 5”

# ============================================

# KV NAMESPACE COMMANDS

# ============================================

# Create KV:

# wrangler kv:namespace create “SESSIONS”

# List keys:

# wrangler kv:key list –namespace-id=your-kv-namespace-id

# ============================================

# R2 BUCKET COMMANDS

# ============================================

# Create bucket:

# wrangler r2 bucket create insighthunter-files

# List buckets:

# wrangler r2 bucket list

# ============================================

# DEPLOYMENT COMMANDS

# ============================================

# Deploy all workers:

# wrangler deploy –env auth

# wrangler deploy –env ingest

# wrangler deploy –env analytics

# wrangler deploy –env management

# Or deploy specific worker:

# wrangler deploy workers/auth/index-cloudflare.js –name insighthunter-auth

# ============================================

# LOCAL DEVELOPMENT

# ============================================

# Start local dev server with persistence:

# wrangler dev –local –persist –env auth

# This will:

# - Use local D1 database (SQLite)

# - Use local KV store

# - Use local R2 storage

# - Connect to Workers AI (requires internet)

# ============================================

# MONITORING & LOGS

# ============================================

# View logs:

# wrangler tail insighthunter-auth

# wrangler tail insighthunter-ingest

# View analytics:

# wrangler pages deployment tail

# ============================================

# COST ESTIMATION (Free Tier)

# ============================================

# D1: 5GB storage, 5M reads, 100K writes/day - FREE

# KV: 1GB storage, 100K reads, 1K writes/day - FREE

# R2: 10GB storage, 10M Class A ops, 100M Class B ops/month - FREE

# Workers AI: 10,000 neurons/day - FREE

# Vectorize: 30M queries/month - FREE

# Workers: 100K requests/day - FREE

# Total: $0/month for most small businesses!

# Scale: ~$20-50/month at 1M requests/month# wrangler-cloudflare.toml

# Cloudflare Workers Configuration for Insight Hunter v3

name = “insighthunter-v3”
main = “src/index.js”
compatibility_date = “2024-01-15”

# ============================================

# AUTH WORKER

# ============================================

[env.auth]
name = “insighthunter-auth”
main = “workers/auth/index-cloudflare.js”
route = “*/auth/*”

[[env.auth.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.auth.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

# ============================================

# INGEST WORKER

# ============================================

[env.ingest]
name = “insighthunter-ingest”
main = “workers/ingest/index-ai.js”
route = “*/ingest/*”

[[env.ingest.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.ingest.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

[[env.ingest.r2_buckets]]
binding = “BUCKET”
bucket_name = “insighthunter-files”

[[env.ingest.vectorize]]
binding = “VECTORIZE”
index_name = “transaction-search”

[env.ingest.ai]
binding = “AI”

# ============================================

# ANALYTICS WORKER

# ============================================

[env.analytics]
name = “insighthunter-analytics”
main = “workers/analytics/index-ai.js”
route = “*/analytics/*”

[[env.analytics.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.analytics.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

[[env.analytics.vectorize]]
binding = “VECTORIZE”
index_name = “transaction-search”

[env.analytics.ai]
binding = “AI”

# ============================================

# MANAGEMENT WORKER

# ============================================

[env.management]
name = “insighthunter-management”
main = “workers/management/index-cloudflare.js”
route = “*/management/*”

[[env.management.d1_databases]]
binding = “DB”
database_name = “insighthunter”
database_id = “your-d1-database-id”

[[env.management.kv_namespaces]]
binding = “KV”
id = “your-kv-namespace-id”

# ============================================

# SHARED CONFIGURATION

# ============================================

# Environment Variables (use wrangler secret for sensitive data)

[vars]
NODE_ENV = “production”
API_VERSION = “v1”

# Rate Limiting

[limits]
cpu_ms = 50

# Analytics Engine (for usage tracking)

[[analytics_engine_datasets]]
binding = “ANALYTICS”

# Durable Objects (for future real-time features)

# [[durable_objects.bindings]]

# name = “REALTIME”

# class_name = “RealtimeSession”

# ============================================

# DEVELOPMENT OVERRIDES

# ============================================

[env.dev]
vars = { NODE_ENV = “development” }

# ============================================

# VECTORIZE INDEX CONFIGURATION

# ============================================

# Create with: wrangler vectorize create transaction-search –dimensions=768 –metric=cosine

# ============================================

# D1 DATABASE COMMANDS

# ============================================

# Create database:

# wrangler d1 create insighthunter

# Apply schema:

# wrangler d1 execute insighthunter –file=database/d1-schema.sql

# Query database:

# wrangler d1 execute insighthunter –command=“SELECT * FROM users LIMIT 5”

# ============================================

# KV NAMESPACE COMMANDS

# ============================================

# Create KV:

# wrangler kv:namespace create “SESSIONS”

# List keys:

# wrangler kv:key list –namespace-id=your-kv-namespace-id

# ============================================

# R2 BUCKET COMMANDS

# ============================================

# Create bucket:

# wrangler r2 bucket create insighthunter-files

# List buckets:

# wrangler r2 bucket list

# ============================================

# DEPLOYMENT COMMANDS

# ============================================

# Deploy all workers:

# wrangler deploy –env auth

# wrangler deploy –env ingest

# wrangler deploy –env analytics

# wrangler deploy –env management

# Or deploy specific worker:

# wrangler deploy workers/auth/index-cloudflare.js –name insighthunter-auth

# ============================================

# LOCAL DEVELOPMENT

# ============================================

# Start local dev server with persistence:

# wrangler dev –local –persist –env auth

# This will:

# - Use local D1 database (SQLite)

# - Use local KV store

# - Use local R2 storage

# - Connect to Workers AI (requires internet)

# ============================================

# MONITORING & LOGS

# ============================================

# View logs:

# wrangler tail insighthunter-auth

# wrangler tail insighthunter-ingest

# View analytics:

# wrangler pages deployment tail

# ============================================

# COST ESTIMATION (Free Tier)

# ============================================

# D1: 5GB storage, 5M reads, 100K writes/day - FREE

# KV: 1GB storage, 100K reads, 1K writes/day - FREE

# R2: 10GB storage, 10M Class A ops, 100M Class B ops/month - FREE

# Workers AI: 10,000 neurons/day - FREE

# Vectorize: 30M queries/month - FREE

# Workers: 100K requests/day - FREE

# Total: $0/month for most small businesses!

# Scale: ~$20-50/month at 1M requests/month
