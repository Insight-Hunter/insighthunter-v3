// .devcontainer/devcontainer.json
// Development container configuration for Insight Huntern
// This ensures all developers have the same environment

{
   "name": "Insight Hunter Development Environment",
  
  // Use the custom Dockerfile instead of a pre-built image
  "build": {
    "dockerfile": "Dockerfile",
    "context": "."
  },
  
  
  // Use the official Microsoft Node.js dev container image
  // This gives you Node.js pre-installed with all the tools you neednpx install vite
  
  "image": "mcr.microsoft.com/devcontainers/javascript-node:1-20-bullseye",
  
  // Features to add to the container
  // These are pre-packaged tools and runtimes you can easily include
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {}
  },
  
  // Forward ports from the container to your local machine
  // This lets you access your running apps in your browser
  "forwardPorts": [
    3000,  // Frontend Vite dev server
    8787,  // Wrangler local dev server for Workers
    8788,  // Additional Worker if you run multiple simultaneously
    8789   // Another Worker instance
  ],
  
  // Labels for the forwarded ports to make them easier to identify
  "portsAttributes": {
    "3000": {
      "label": "Frontend",
      "onAutoForward": "notify"
    },
    "8787": {
      "label": "Worker (Primary)",
      "onAutoForward": "notify"
    },
    "8788": {
      "label": "Worker (Secondary)",
      "onAutoForward": "silent"
    },
    "8789": {
      "label": "Worker (Tertiary)",
      "onAutoForward": "silent"
    }
  },
  
  // Commands to run after the container is created
  // This installs all your dependencies automatically
  "postCreateCommand": "npm install && cd frontend && npm install && cd ../workers/auth && npm install && cd ../ingest && npm install && cd ../analytics && npm install && cd ../management && npm install && cd ../..",
  
  // Commands to run after the container starts (every time you open it)
  // This could be used to start background services if needed
  "postStartCommand": "",
  
  // Customize the VS Code settings inside the container
  "customizations": {
    "vscode": {
      // Extensions to install automatically in the container
      "extensions": [
        // Essential JavaScript/Node.js extensions
        "dbaeumer.vscode-eslint",           // ESLint for code quality
        "esbenp.prettier-vscode",           // Prettier for code formatting
        "ms-vscode.vscode-typescript-next", // TypeScript support
        
        // Git and GitHub integration
        "github.vscode-pull-request-github", // GitHub PR integration
        "eamodio.gitlens",                   // Advanced Git features
        
        // Cloudflare Workers specific
        "cloudflare.vscode-workers",         // Cloudflare Workers tools
        
        // React and frontend development
        "dsznajder.es7-react-js-snippets",  // React code snippets
        "bradlc.vscode-tailwindcss",         // Tailwind CSS IntelliSense
        
        // Database and SQL
        "mtxr.sqltools",                     // SQL tools for D1 queries
        
        // General productivity
        "christian-kohler.path-intellisense", // Auto-complete file paths
        "streetsidesoftware.code-spell-checker", // Spell checker for code
        "usernamehw.errorlens",              // Show errors inline
        "wayou.vscode-todo-highlight",       // Highlight TODO comments
        
        // API development
        "humao.rest-client",                 // Test API requests in VS Code
        
        // Markdown support for documentation
        "yzhang.markdown-all-in-one"        // Markdown editing tools
      ],
      
      // VS Code settings that apply inside the container
      "settings": {
        // Editor settings
        "editor.formatOnSave": true,
        "editor.defaultFormatter": "esbenp.prettier-vscode",
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": true
        },
        "editor.tabSize": 2,
        "editor.rulers": [80, 120],
        
        // File handling
        "files.autoSave": "afterDelay",
        "files.autoSaveDelay": 1000,
        "files.exclude": {
          "**/node_modules": true,
          "**/.wrangler": true,
          "**/dist": true,
          "**/build": true
        },
        
        // ESLint configuration
        "eslint.validate": [
          "javascript",
          "javascriptreact"
        ],
        "eslint.workingDirectories": [
          "./workers/auth",
          "./workers/ingest",
          "./workers/analytics",
          "./workers/management",
          "./frontend"
        ],
        
        // Prettier configuration
        "prettier.requireConfig": false,
        "prettier.singleQuote": true,
        "prettier.trailingComma": "es5",
        
        // JavaScript settings
        "javascript.updateImportsOnFileMove.enabled": "always",
        "javascript.preferences.quoteStyle": "single",
        
        // Terminal settings
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.fontSize": 13,
        
        // Git settings
        "git.autofetch": true,
        "git.confirmSync": false,
        "git.enableSmartCommit": true,
        
        // Tailwind CSS
        "tailwindCSS.experimental.classRegex": [
          ["className\\s*=\\s*['\"]([^'\"]*)['\"]", "([^'\"]*)"]
        ],
        
        // SQL Tools configuration for D1
        "sqltools.connections": [
          {
            "name": "Insight Hunter D1 (Local)",
            "driver": "SQLite",
            "database": "${workspaceFolder:insighthunter-v3}/.wrangler/state/v3/d1/miniflare-D1DatabaseObject/*.sqlite"
          }
        ]
      }
    }
  },
  
  // Environment variables available in the container
  // These don't include secrets - those should be in .dev.vars
  "containerEnv": {
    "NODE_ENV": "development",
    "FORCE_COLOR": "1"
  },
  
  // Mount points for persistent data
  // This ensures your Git history and certain caches persist between container rebuilds
  "mounts": [
    "source=${localWorkspaceFolder}/.devcontainer/.bash_history,target=/home/node/.bash_history,type=bind,consistency=cached"
  ],
  
  // Run the container as the node user (not root) for security
  "remoteUser": "node",
  
  // Additional arguments to pass to docker run
  "runArgs": [
    "--name=insighthunter-dev"
  ]
}
